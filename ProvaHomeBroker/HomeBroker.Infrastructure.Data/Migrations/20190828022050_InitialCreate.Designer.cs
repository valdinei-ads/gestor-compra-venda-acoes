// <auto-generated />
using System;
using HomeBroker.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeBroker.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190828022050_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("HomeBroker.Domain.Model.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("string");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("Datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasMaxLength(350);

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("HomeBroker.Domain.Model.CotacaoAcao", b =>
                {
                    b.Property<int>("IdCotacaoAcao")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodigoAcao")
                        .IsRequired()
                        .HasColumnName("CodigoAcao")
                        .HasMaxLength(10);

                    b.Property<DateTime>("DataCotacao")
                        .HasColumnType("Datetime");

                    b.Property<decimal>("ValorCotacao")
                        .HasColumnType("decimal");

                    b.HasKey("IdCotacaoAcao");

                    b.ToTable("CotacaoAcao");
                });

            modelBuilder.Entity("HomeBroker.Domain.Model.Ordem", b =>
                {
                    b.Property<int>("IdOrdem")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodigoAcao")
                        .IsRequired()
                        .HasColumnType("string");

                    b.Property<DateTime?>("DataCompra")
                        .HasColumnName("DataCompra")
                        .HasColumnType("Datetime");

                    b.Property<DateTime>("DataOrdem")
                        .HasColumnName("DataOrdem")
                        .HasColumnType("Datetime");

                    b.Property<decimal>("IR")
                        .HasColumnName("IR")
                        .HasColumnType("decimal");

                    b.Property<int>("IdCliente");

                    b.Property<int>("QuantidadeAcoes")
                        .HasColumnName("QuantidadeAcoes")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxaCorretagem")
                        .HasColumnName("TaxaCorretagem")
                        .HasColumnType("decimal");

                    b.Property<string>("TipoOrdem")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<decimal>("ValorOrdem")
                        .HasColumnName("ValorOrdem")
                        .HasColumnType("decimal");

                    b.HasKey("IdOrdem");

                    b.HasIndex("IdCliente");

                    b.ToTable("Ordem");
                });

            modelBuilder.Entity("HomeBroker.Domain.Model.Ordem", b =>
                {
                    b.HasOne("HomeBroker.Domain.Model.Cliente", "Cliente")
                        .WithMany("Ordens")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
